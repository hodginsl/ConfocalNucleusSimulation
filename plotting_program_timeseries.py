# -*- coding: utf-8 -*-
"""
Program to plot the image arrays generated by Nucleus_w_condensates_sim.py
Saves both the No_condensates and w_condensates timeseries as .tif files
Author: Lydia Hodgins
"""
#Import Packages

import numpy as np
import matplotlib.pyplot as plt
import tifffile

#Define the folder the image arrays are saved in

foldername = '<directory containing both no_condensate and w_condensate image arrays>' #Change to your dir

# Plot timeseries with no condensates
for i in range(20): #Match range to number of frames simulated
    filename = 'frame'+ str(i) + '_image_array_no_condensate_2_pop.txt' #change to match filename for no condensate timeseries
    data_file= foldername + filename
    
    image_intensities_no_condensate = np.loadtxt(   #import the image array without the condensate
        data_file,
        skiprows = 1)
    
    minvalue = np.min([np.min(image_intensities_no_condensate)]) 
    maxvalue = np.max([np.max(image_intensities_no_condensate)])
    
    #plot the image with no condensate
    
    fig = plt.figure(figsize=(4.27,3.2))
    ax = plt.axes()
    im = plt.imshow(image_intensities_no_condensate, vmin=minvalue, vmax=maxvalue, cmap ='Greys_r')
    #---Plotting parameters to uncomment if wanted---#
    #plt.xlabel('x (pixels)', fontsize=14)
    #plt.ylabel('y (pixels)', fontsize=14)
    #plt.title('frame' +str(i) +', no condensate')
    #cbar = fig.colorbar(im, ax= ax)
    #cbar.ax.set_ylabel('Intensity (Photons/pixel)', fontsize=14)
    plt.axis('off')
    imagename = 'tif_files\\frame'+ str(i) + '_image_array_no_condensate_2_pop.tiff'
    file = foldername + imagename
    tifffile.imsave(file, image_intensities_no_condensate)
    #plt.savefig(file,  bbox_inches='tight', pad_inches = 0)

#Plot timeseries including condensates
for i in range(20): 
 
    filename = 'frame'+ str(i) +'_image_array_w_condensate_2_pop.txt' #Change to match filename for w condensate timeseries
    data_file= foldername + filename
    
    image_intensities_w_condensate = np.loadtxt(    #import the image array with the condensate
        data_file,
        skiprows = 1)
    minvalue = np.min([np.min(image_intensities_w_condensate)]) 
    maxvalue = np.max([np.max(image_intensities_w_condensate)])
    
    
    fig = plt.figure(figsize=(4.27,3.2))
    ax = plt.axes()
    im = plt.imshow(image_intensities_w_condensate, vmin=minvalue, vmax=maxvalue, cmap ='Greys_r')
    #---Plotting parameters to uncomment if wanted---#
    #plt.xlabel('x (pixels)', fontsize=14)
    #plt.ylabel('y (pixels)', fontsize=14)
    #plt.title('frame' + str(i) +', w/ condensate')
    #cbar = fig.colorbar(im, ax= ax)
    #cbar.ax.set_ylabel('Intensity (Photons/pixel)', fontsize=14)
    plt.axis('off')
    imagename = 'tif_files\\frame'+ str(i) +'_image_array_w_condensate_2_pop.tiff'
    file = foldername + imagename
    tifffile.imsave(file, image_intensities_w_condensate)
    #plt.savefig(file, bbox_inches='tight', pad_inches = 0)
    
    
